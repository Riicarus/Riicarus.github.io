const e=JSON.parse('{"key":"v-74ab8e9d","path":"/posts/Algorithm/Replacement/Clock.html","title":"Clock 置换算法","lang":"zh-CN","frontmatter":{"date":"2023-03-21T00:00:00.000Z","category":["算法","置换算法"],"tag":["Clock"],"description":"Clock 置换算法 时钟置换算法可以认为是一种最近未使用算法. 在需要置换时, 依次遍历循环队列中的元素, 如果发现未使用的元素, 就将其置换出去. 所有的元素都有一个 used 字段, 被放入的元素的 used = 1; 当遍历到该元素时, 将其设置为 0; 遍历到 used = 0 的元素时, 将其置换出去. 时钟置换算法最多需要两轮循环遍历就能完成一次置换.","head":[["meta",{"property":"og:url","content":"https://riicarus.github.io/posts/Algorithm/Replacement/Clock.html"}],["meta",{"property":"og:site_name","content":"Riicarus"}],["meta",{"property":"og:title","content":"Clock 置换算法"}],["meta",{"property":"og:description","content":"Clock 置换算法 时钟置换算法可以认为是一种最近未使用算法. 在需要置换时, 依次遍历循环队列中的元素, 如果发现未使用的元素, 就将其置换出去. 所有的元素都有一个 used 字段, 被放入的元素的 used = 1; 当遍历到该元素时, 将其设置为 0; 遍历到 used = 0 的元素时, 将其置换出去. 时钟置换算法最多需要两轮循环遍历就能完成一次置换."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-30T08:13:26.000Z"}],["meta",{"property":"article:tag","content":"Clock"}],["meta",{"property":"article:published_time","content":"2023-03-21T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-30T08:13:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Clock 置换算法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-03-21T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-30T08:13:26.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1679480367000,"updatedTime":1680164006000,"contributors":[{"name":"Riicarus","email":"riicarus.acc@gmail.com","commits":2}]},"readingTime":{"minutes":0.52,"words":157},"filePathRelative":"posts/Algorithm/Replacement/Clock.md","localizedDate":"2023年3月21日","excerpt":"<h1> Clock 置换算法</h1>\\n<p>时钟置换算法可以认为是一种最近未使用算法. 在需要置换时, 依次遍历循环队列中的元素, 如果发现未使用的元素, 就将其置换出去.<br>\\n所有的元素都有一个 <code>used</code> 字段, 被放入的元素的 <code>used = 1</code>; 当遍历到该元素时, 将其设置为 <code>0</code>; 遍历到 <code>used = 0</code> 的元素时, 将其置换出去.<br>\\n时钟置换算法最多需要两轮循环遍历就能完成一次置换.</p>\\n","autoDesc":true}');export{e as data};
