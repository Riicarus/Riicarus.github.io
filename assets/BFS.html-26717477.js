const e=JSON.parse('{"key":"v-843c53de","path":"/posts/Algorithm/Template/Search/BFS.html","title":"BFS","lang":"zh-CN","frontmatter":{"date":"2023-08-09T00:00:00.000Z","category":["算法"],"tag":["算法模板","BFS"],"description":"BFS 适合于计算树的深度, 走迷宫等问题. 模板 public void bfs() { // 1. push initial state to the queue queue.push(initialState); // 2. iterate till the queue is empty while (!queue.isEmpty()) { // 2.1 poll state from the queue Object state = queue.poll(); // 2.2. extend the state // may add new state to the queue... } }","head":[["meta",{"property":"og:url","content":"https://riicarus.github.io/posts/Algorithm/Template/Search/BFS.html"}],["meta",{"property":"og:site_name","content":"Riicarus"}],["meta",{"property":"og:title","content":"BFS"}],["meta",{"property":"og:description","content":"BFS 适合于计算树的深度, 走迷宫等问题. 模板 public void bfs() { // 1. push initial state to the queue queue.push(initialState); // 2. iterate till the queue is empty while (!queue.isEmpty()) { // 2.1 poll state from the queue Object state = queue.poll(); // 2.2. extend the state // may add new state to the queue... } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-11T15:46:37.000Z"}],["meta",{"property":"article:tag","content":"算法模板"}],["meta",{"property":"article:tag","content":"BFS"}],["meta",{"property":"article:published_time","content":"2023-08-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-11T15:46:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"BFS\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-09T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-11T15:46:37.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"模板","slug":"模板","link":"#模板","children":[{"level":3,"title":"扩展","slug":"扩展","link":"#扩展","children":[]}]},{"level":2,"title":"例题","slug":"例题","link":"#例题","children":[]}],"git":{"createdTime":1691768537000,"updatedTime":1691768797000,"contributors":[{"name":"Riicarus","email":"riicarus.acc@gmail.com","commits":2}]},"readingTime":{"minutes":1.14,"words":342},"filePathRelative":"posts/Algorithm/Template/Search/BFS.md","localizedDate":"2023年8月9日","excerpt":"<h1> BFS</h1>\\n<p>适合于计算树的深度, 走迷宫等问题.</p>\\n<h2> 模板</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">bfs</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">// 1. push initial state to the queue</span>\\n    queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">push</span><span class=\\"token punctuation\\">(</span>initialState<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n    <span class=\\"token comment\\">// 2. iterate till the queue is empty</span>\\n    <span class=\\"token keyword\\">while</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span>queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isEmpty</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// 2.1 poll state from the queue</span>\\n        <span class=\\"token class-name\\">Object</span> state <span class=\\"token operator\\">=</span> queue<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">poll</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n        <span class=\\"token comment\\">// 2.2. extend the state</span>\\n        <span class=\\"token comment\\">// may add new state to the queue...</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{e as data};
