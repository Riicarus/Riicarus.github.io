const e=JSON.parse('{"key":"v-7971634b","path":"/posts/Architecture/HighConcurrency/SpikeSystemDesign.html","title":"秒杀系统设计","lang":"zh-CN","frontmatter":{"date":"2023-02-01T00:00:00.000Z","category":["架构设计","高并发"],"tag":["秒杀系统"],"description":"秒杀系统设计 秒杀系统主要从前后端两个方面进行设计. 前端限制用户操作, 后端进行高并发设计. 秒杀系统关注服务器的高并发能力以及逻辑完整性, 既要保证能够支持短时间大流量输入, 又要确保商品库存正确扣减, 一定不能超卖. 后端设计 后端设计的思路包括: 如何提高并发量. 并发量支撑不住怎么办. 我们要尽可能支撑高并发, 但是也要做好支撑不住的保护方案, 下面进行一一阐述.","head":[["meta",{"property":"og:url","content":"https://riicarus.github.io/posts/Architecture/HighConcurrency/SpikeSystemDesign.html"}],["meta",{"property":"og:site_name","content":"Riicarus"}],["meta",{"property":"og:title","content":"秒杀系统设计"}],["meta",{"property":"og:description","content":"秒杀系统设计 秒杀系统主要从前后端两个方面进行设计. 前端限制用户操作, 后端进行高并发设计. 秒杀系统关注服务器的高并发能力以及逻辑完整性, 既要保证能够支持短时间大流量输入, 又要确保商品库存正确扣减, 一定不能超卖. 后端设计 后端设计的思路包括: 如何提高并发量. 并发量支撑不住怎么办. 我们要尽可能支撑高并发, 但是也要做好支撑不住的保护方案, 下面进行一一阐述."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-30T09:50:34.000Z"}],["meta",{"property":"article:tag","content":"秒杀系统"}],["meta",{"property":"article:published_time","content":"2023-02-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-30T09:50:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"秒杀系统设计\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-01T00:00:00.000Z\\",\\"dateModified\\":\\"2023-03-30T09:50:34.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"后端设计","slug":"后端设计","link":"#后端设计","children":[{"level":3,"title":"Redis 集群","slug":"redis-集群","link":"#redis-集群","children":[]},{"level":3,"title":"库存预热","slug":"库存预热","link":"#库存预热","children":[]},{"level":3,"title":"Lua","slug":"lua","link":"#lua","children":[]},{"level":3,"title":"Web 服务器","slug":"web-服务器","link":"#web-服务器","children":[]},{"level":3,"title":"MQ","slug":"mq","link":"#mq","children":[]},{"level":3,"title":"资源静态化","slug":"资源静态化","link":"#资源静态化","children":[]},{"level":3,"title":"恶意请求拦截","slug":"恶意请求拦截","link":"#恶意请求拦截","children":[]},{"level":3,"title":"动态 URL","slug":"动态-url","link":"#动态-url","children":[]},{"level":3,"title":"限流/熔断/降级","slug":"限流-熔断-降级","link":"#限流-熔断-降级","children":[]},{"level":3,"title":"单一职责","slug":"单一职责","link":"#单一职责","children":[]}]},{"level":2,"title":"前端设计","slug":"前端设计","link":"#前端设计","children":[{"level":3,"title":"按钮置灰","slug":"按钮置灰","link":"#按钮置灰","children":[]}]}],"git":{"createdTime":1678075657000,"updatedTime":1680169834000,"contributors":[{"name":"Riicarus","email":"riicarus.acc@gmail.com","commits":3},{"name":"skyline-blue","email":"2895054643@qq.com","commits":2}]},"readingTime":{"minutes":3.82,"words":1147},"filePathRelative":"posts/Architecture/HighConcurrency/SpikeSystemDesign.md","localizedDate":"2023年2月1日","excerpt":"<h1> 秒杀系统设计</h1>\\n<blockquote>\\n<p>秒杀系统主要从前后端两个方面进行设计.<br>\\n前端限制用户操作, 后端进行高并发设计.</p>\\n<p>秒杀系统关注服务器的高并发能力以及逻辑完整性, 既要保证能够支持短时间大流量输入, 又要确保商品库存正确扣减, 一定不能超卖.</p>\\n</blockquote>\\n<h2> 后端设计</h2>\\n<blockquote>\\n<p>后端设计的思路包括:</p>\\n<ul>\\n<li>如何提高并发量.</li>\\n<li>并发量支撑不住怎么办.</li>\\n</ul>\\n<p>我们要尽可能支撑高并发, 但是也要做好支撑不住的保护方案, 下面进行一一阐述.</p>\\n</blockquote>","autoDesc":true}');export{e as data};
