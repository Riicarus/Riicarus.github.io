const t=JSON.parse('{"key":"v-e42bf7b8","path":"/posts/Java/JUC/ThreadPool.html","title":"线程池","lang":"zh-CN","frontmatter":{"date":"2023-04-03T00:00:00.000Z","category":["Java","JUC"],"tag":["Java","JUC","线程池"],"description":"线程池 概述 什么是线程池 线程池是一种基于池化思想管理线程的工具, 通常出现在多线程服务器中. 线程池维护多个线程, 等待管理者分配可以并发执行的任务. 这样一方面避免了处理任务时创建和销毁线程带来的开销, 另一方面避免了线程数量膨胀带来的过度调度问题, 保证了对内核的充分利用. 使用线程池的好处如下: 降低资源消耗; 提高相应速度; 提高线程的可管理性; 提供更多强大功能;","head":[["meta",{"property":"og:url","content":"https://riicarus.github.io/posts/Java/JUC/ThreadPool.html"}],["meta",{"property":"og:site_name","content":"Riicarus"}],["meta",{"property":"og:title","content":"线程池"}],["meta",{"property":"og:description","content":"线程池 概述 什么是线程池 线程池是一种基于池化思想管理线程的工具, 通常出现在多线程服务器中. 线程池维护多个线程, 等待管理者分配可以并发执行的任务. 这样一方面避免了处理任务时创建和销毁线程带来的开销, 另一方面避免了线程数量膨胀带来的过度调度问题, 保证了对内核的充分利用. 使用线程池的好处如下: 降低资源消耗; 提高相应速度; 提高线程的可管理性; 提供更多强大功能;"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://riicarus.github.io/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-05T12:04:01.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"线程池"}],["meta",{"property":"article:tag","content":"Java"}],["meta",{"property":"article:tag","content":"JUC"}],["meta",{"property":"article:tag","content":"线程池"}],["meta",{"property":"article:published_time","content":"2023-04-03T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-04-05T12:04:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"线程池\\",\\"image\\":[\\"https://riicarus.github.io/\\"],\\"datePublished\\":\\"2023-04-03T00:00:00.000Z\\",\\"dateModified\\":\\"2023-04-05T12:04:01.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"概述","slug":"概述","link":"#概述","children":[{"level":3,"title":"什么是线程池","slug":"什么是线程池","link":"#什么是线程池","children":[]}]},{"level":2,"title":"线程池的核心设计","slug":"线程池的核心设计","link":"#线程池的核心设计","children":[{"level":3,"title":"总体设计","slug":"总体设计","link":"#总体设计","children":[]},{"level":3,"title":"生命周期管理","slug":"生命周期管理","link":"#生命周期管理","children":[]},{"level":3,"title":"任务执行机制","slug":"任务执行机制","link":"#任务执行机制","children":[]},{"level":3,"title":"工作线程管理","slug":"工作线程管理","link":"#工作线程管理","children":[]}]}],"git":{"createdTime":1680508671000,"updatedTime":1680696241000,"contributors":[{"name":"Riicarus","email":"riicarus.acc@gmail.com","commits":3}]},"readingTime":{"minutes":9.31,"words":2794},"filePathRelative":"posts/Java/JUC/ThreadPool.md","localizedDate":"2023年4月3日","excerpt":"<h1> 线程池</h1>\\n<h2> 概述</h2>\\n<h3> 什么是线程池</h3>\\n<p>线程池是一种基于池化思想管理线程的工具, 通常出现在多线程服务器中.</p>\\n<p>线程池维护多个线程, 等待管理者分配可以并发执行的任务. 这样一方面<strong>避免了处理任务时创建和销毁线程带来的开销</strong>, 另一方面<strong>避免了线程数量膨胀带来的过度调度问题, 保证了对内核的充分利用</strong>.</p>\\n<p>使用线程池的好处如下:</p>\\n<ol>\\n<li>降低资源消耗;</li>\\n<li>提高相应速度;</li>\\n<li>提高线程的可管理性;</li>\\n<li>提供更多强大功能;</li>\\n</ol>","autoDesc":true}');export{t as data};
