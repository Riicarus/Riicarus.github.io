const n=JSON.parse('{"key":"v-e4b7a062","path":"/posts/Algorithm/Template/Search/DFS.html","title":"DFS","lang":"zh-CN","frontmatter":{"date":"2023-08-09T00:00:00.000Z","category":["算法"],"tag":["算法模板","DFS"],"description":"DFS 适合于遍历树, 枚举情况等. 属于回溯法的一种. 模板 public void bfs(int i) { if (isEnd(i)) { // do something ... } // iterate all options for (Object o : getOptions()) { if (!isUsed(o)) { // update some attributes updatePath(i, o); // the core backtrack method updateState(o); dfs(i + 1); backtrackState(o); } } }","head":[["meta",{"property":"og:url","content":"https://riicarus.github.io/posts/Algorithm/Template/Search/DFS.html"}],["meta",{"property":"og:site_name","content":"Riicarus"}],["meta",{"property":"og:title","content":"DFS"}],["meta",{"property":"og:description","content":"DFS 适合于遍历树, 枚举情况等. 属于回溯法的一种. 模板 public void bfs(int i) { if (isEnd(i)) { // do something ... } // iterate all options for (Object o : getOptions()) { if (!isUsed(o)) { // update some attributes updatePath(i, o); // the core backtrack method updateState(o); dfs(i + 1); backtrackState(o); } } }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-11T15:46:37.000Z"}],["meta",{"property":"article:tag","content":"算法模板"}],["meta",{"property":"article:tag","content":"DFS"}],["meta",{"property":"article:published_time","content":"2023-08-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-11T15:46:37.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DFS\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-09T00:00:00.000Z\\",\\"dateModified\\":\\"2023-08-11T15:46:37.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"模板","slug":"模板","link":"#模板","children":[]},{"level":2,"title":"例题","slug":"例题","link":"#例题","children":[]}],"git":{"createdTime":1691768537000,"updatedTime":1691768797000,"contributors":[{"name":"Riicarus","email":"riicarus.acc@gmail.com","commits":2}]},"readingTime":{"minutes":0.57,"words":171},"filePathRelative":"posts/Algorithm/Template/Search/DFS.md","localizedDate":"2023年8月9日","excerpt":"<h1> DFS</h1>\\n<p>适合于遍历树, 枚举情况等.</p>\\n<p>属于<strong>回溯法</strong>的一种.</p>\\n<h2> 模板</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token keyword\\">public</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">bfs</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">int</span> i<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token function\\">isEnd</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token comment\\">// do something ...</span>\\n    <span class=\\"token punctuation\\">}</span>\\n\\n    <span class=\\"token comment\\">// iterate all options</span>\\n    <span class=\\"token keyword\\">for</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Object</span> o <span class=\\"token operator\\">:</span> <span class=\\"token function\\">getOptions</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span><span class=\\"token operator\\">!</span><span class=\\"token function\\">isUsed</span><span class=\\"token punctuation\\">(</span>o<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token comment\\">// update some attributes</span>\\n            <span class=\\"token function\\">updatePath</span><span class=\\"token punctuation\\">(</span>i<span class=\\"token punctuation\\">,</span> o<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token comment\\">// the core backtrack method</span>\\n            <span class=\\"token function\\">updateState</span><span class=\\"token punctuation\\">(</span>o<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token function\\">dfs</span><span class=\\"token punctuation\\">(</span>i <span class=\\"token operator\\">+</span> <span class=\\"token number\\">1</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token function\\">backtrackState</span><span class=\\"token punctuation\\">(</span>o<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
