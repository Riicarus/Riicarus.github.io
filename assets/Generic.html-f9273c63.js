import{_ as i,V as l,W as e,$ as o}from"./framework-c6791857.js";const t={},r=o('<h1 id="计网概述" tabindex="-1"><a class="header-anchor" href="#计网概述" aria-hidden="true">#</a> 计网概述</h1><h2 id="osi-标准模型" tabindex="-1"><a class="header-anchor" href="#osi-标准模型" aria-hidden="true">#</a> OSI 标准模型</h2><ul><li>应用层: 针对特定应用(SMTP, FTP, RPC)</li><li>表示层: 处理数据表示和运输相关问题, 将设备的固有数据转换为网络标准格式</li><li>会话层: 管理通信, 负责利用传输层提供的服务建立和维持会话</li><li>传输层: 管理两个节点之间的数据传输(TCP, UDP)</li><li>网络层: 负责地址管理和路由选择(IP)</li><li>数据链路层: 负责在单个链路上传输数据帧</li><li>物理层: 提供传输媒体和互联设备</li></ul><h2 id="tcp-ip-协议簇" tabindex="-1"><a class="header-anchor" href="#tcp-ip-协议簇" aria-hidden="true">#</a> TCP/IP 协议簇</h2><p>简化为四层模型</p><ul><li>应用层(包括 OSI 的应用层, 表示层, 会话层)</li><li>传输层</li><li>网络层</li><li>通信链路层(包括 OSI 的数据链路层, 物理层)</li></ul><p>协议簇包含的协议:</p><ul><li>IP 协议: Internet Protocol. 网络层, 为运输层提供数据分发, 组装数据供运输层使用</li><li>ICMP 协议: Internet Control Message Protocol. 网络层, 在 IP 主机, 路由器之间传递控制消息(错误侦测与回报机制).</li><li>ARP 协议: Address Resolution Protocol. IP 地址 --&gt; 物理地址.</li><li>TCP 协议: Transmission Control Protocol. 传输层, 可靠数据交互(慢启动, 拥塞控制, 快速重传, 可恢复).</li><li>UDP 协议: User Datagram Protocol. 传输层, 无连接, 不可靠, 效率高.</li><li>FTP 协议: File Transfer Protocol. 应用层, 文件传输协议, 服务器 + 客户端.</li><li>DNS 协议: Domain Name System. 应用层, 域名 &lt;--&gt; IP. 分布式系统.</li><li>SMTP 协议: Simple Mail Transfer Protocol. 应用层, 邮件服务.</li><li>SLIP 协议: Serial Line Internet Protocol. 链路层, 点对点.</li><li>PPP 协议: Point to Point Protocol. 链路层, 同等单元之间传输数据包, 点对点.</li></ul>',8),a=[r];function n(c,s){return l(),e("div",null,a)}const d=i(t,[["render",n],["__file","Generic.html.vue"]]);export{d as default};
